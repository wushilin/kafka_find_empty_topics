/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2.1/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.8.20'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

version = "1.0.0-SNAPSHOT"
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.apache.kafka:kafka-clients:3.5.1'
    implementation 'com.github.ajalt:clikt:2.8.0'
    implementation 'net.wushilin:envawareproperties:1.0.6'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    implementation 'org.slf4j:slf4j-api:2.0.7'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use Kotlin Test test framework
            useKotlinTest('1.8.20')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'kafka_find_empty_topics.AppKt'
}

task fatJar(type: Jar) {
    zip64 true
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    manifest {
        attributes "Main-Class": "net.wushilin.kafka.find.empty.topics.AppKt"
    }
    archiveBaseName = 'ccloud_demo_fat'

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }

    with jar
}